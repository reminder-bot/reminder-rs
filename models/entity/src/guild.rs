//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "guild")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::reminder_template::Entity")]
    ReminderTemplate,
    #[sea_orm(has_many = "super::channel::Entity")]
    Channel,
    #[sea_orm(has_many = "super::todo::Entity")]
    Todo,
    #[sea_orm(has_many = "super::command_macro::Entity")]
    CommandMacro,
}

impl Related<super::reminder_template::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ReminderTemplate.def()
    }
}

impl Related<super::channel::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Channel.def()
    }
}

impl Related<super::todo::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Todo.def()
    }
}

impl Related<super::command_macro::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CommandMacro.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
