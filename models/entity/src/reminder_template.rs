//! SeaORM Entity. Generated by sea-orm-codegen 0.8.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "reminder_template")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub guild_id: i64,
    pub name: String,
    pub username: Option<String>,
    pub avatar: Option<String>,
    pub content: Option<String>,
    pub tts: bool,
    pub attachment: Option<Vec<u8>>,
    pub attachment_name: Option<String>,
    pub embed_title: Option<String>,
    pub embed_description: Option<String>,
    pub embed_image_url: Option<String>,
    pub embed_thumbnail_url: Option<String>,
    pub embed_footer: Option<String>,
    pub embed_footer_url: Option<String>,
    pub embed_author: Option<String>,
    pub embed_author_url: Option<String>,
    pub embed_color: Option<i32>,
    pub embed_fields: Option<Json>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::guild::Entity",
        from = "Column::GuildId",
        to = "super::guild::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Guild,
}

impl Related<super::guild::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Guild.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
